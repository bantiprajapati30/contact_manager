{"version":3,"sources":["Context.js","component/Contacts/Contact.js","component/Contacts/Contacts.js","component/Layout/Header.js","component/Layout/TextInputGroup.js","component/Contacts/AddContact.js","component/Contacts/EditContact.js","component/pages/About.js","component/pages/NotFound.js","component/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleted","a","delete","name","email","phone","website","className","onClick","style","cursor","bind","float","color","to","marginRight","Contacts","Fragment","key","Header","branding","href","TextInputGroup","labal","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","onSubmit","preventDefault","newContact","post","history","push","target","EditContact","updContact","match","params","put","About","NotFound","Test","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.adadacfd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext(); \r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts:[action.payload, ...state.contacts]\r\n            };\r\n            case 'UPDATE_CONTACT':\r\n                return {\r\n                  ...state,\r\n                  contacts: state.contacts.map(\r\n                    contact =>\r\n                      contact.id === action.payload.id\r\n                        ? (contact = action.payload)\r\n                        : contact\r\n                  )\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    }\r\n    async componentDidMount() {\r\n        const res= await axios.get('http://jsonplaceholder.typicode.com/users')\r\n        this.setState({contacts:res.data})\r\n    }\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        );\r\n    }\r\n}\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../Context';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios'\r\n\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n    onShowClick = e => {\r\n        this.setState({\r\n            showContactInfo: !this.state.showContactInfo\r\n        });\r\n    }\r\n    onDeleted = async (id, dispatch) => {\r\n        try {\r\n            await axios.delete(`http://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id })\r\n        }\r\n        catch (e) {\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id })\r\n        }\r\n\r\n    }\r\n    render() {\r\n        const { showContactInfo } = this.state;\r\n        const { id, name, email, phone, website } = this.props.contact;\r\n        return (\r\n\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>{name} {' '}\r\n                                <i\r\n                                    onClick={this.onShowClick}\r\n                                    className=\"fas fa-sort-down\"\r\n                                    style={{ cursor: 'pointer' }}\r\n                                />\r\n                                <i onClick={this.onDeleted.bind(this, id, dispatch)} className=\"fas fa-times\" style={{ cursor: 'pointer', float: 'right', color: 'red' }} />\r\n                                \r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i className=\"fas fa-pencil-alt\"\r\n                                        style={{\r\n                                            cursor: 'pointer',\r\n                                            float: 'right',\r\n                                            color: 'black', \r\n                                            marginRight: '1rem'\r\n                                        }}>\r\n\r\n                                    </i>\r\n                                </Link>\r\n\r\n                            </h4>\r\n                            {showContactInfo ? <ul className=\"list-group\">\r\n                                <li className=\"list-group-item\"> Email: {email}</li>\r\n                                <li className=\"list-group-item\"> phone no: {phone}</li>\r\n                                <li className=\"list-group-item\"> website: {website}</li>\r\n                            </ul> : null}\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n};\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n\r\n\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../Context';\r\n\r\nclass Contacts extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h2 className=\"display-4 mb-2\"><span className=\"text-danger\">Contacts </span>List</h2>\r\n                            {contacts.map(contact => (\r\n                                <Contact\r\n                                    key={contact.id}\r\n                                    contact={contact}\r\n                                />\r\n                            ))}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n};\r\nexport default Contacts;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Header = (props) => {\r\n    const { branding } = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">{branding} <i className=\"fas fa-id-card-alt\" /></a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">Home <i className=\"fas fa-home\" /></Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">Add <i className=\"fas fa-plus\" /></Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/About\" className=\"nav-link\">About <i className=\"fas fa-question\" /></Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n\r\n}\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    labal,\r\n    type,\r\n    name,\r\n    placeholder,\r\n    value,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor={name}>{labal}</label>\r\n                <input\r\n                    type={type}\r\n                    name={name}\r\n                    className={classnames(\"form-control form-control-lg\", { 'is-invalid': error })}\r\n                    placeholder={placeholder}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n                {error && <div className=\"invalid-feedback\">{error}</div>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nTextInputGroup.propTypes = {\r\n    labal: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\nTextInputGroup.defaultProps = {\r\n    type: \"text\"\r\n};\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../Context';\r\nimport TextInputGroup from '../Layout/TextInputGroup';\r\n// import { v1 as uuid } from 'uuid';\r\nimport axios from 'axios'\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        website: '',\r\n        errors: {}\r\n    }\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone, website } = this.state;\r\n\r\n        //check for Error\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'name is required' } })\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'email address is required' } })\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'phone no is required' } })\r\n            return;\r\n        }\r\n        if (website === '') {\r\n            this.setState({ errors: { website: 'website is required' } })\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            // id: uuid(),\r\n            name,\r\n            email,\r\n            phone,\r\n            website\r\n        };\r\n        const res = await axios.post('http://jsonplaceholder.typicode.com/users', newContact\r\n        );\r\n\r\n        dispatch({ type: 'ADD_CONTACT', payload: res.data })\r\n\r\n\r\n        //clear text field\r\n        this.setState({ \r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            website: '',\r\n            errors: {}\r\n        });\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value })\r\n    render() {\r\n        const { name, email, phone, website, errors } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Add Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup\r\n                                        labal=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter your Name\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        labal=\"Email Address\"\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        placeholder=\"Enter your Email Id\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        labal=\"Phone No\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter your Phone no\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        labal=\"website\"\r\n                                        name=\"website\"\r\n                                        placeholder=\"Enter your website\"\r\n                                        value={website}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.website}\r\n                                    />\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Add Contact\"\r\n                                        className=\"btn btn-dark btn-block\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../Context';\r\nimport TextInputGroup from '../Layout/TextInputGroup';\r\n// import { v1 as uuid } from 'uuid';\r\nimport axios from 'axios'\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        website: '',\r\n        errors: {}\r\n    };\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone,\r\n            website: contact.website\r\n        });\r\n    }\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone, website } = this.state;\r\n\r\n        //check for Error\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'name is required' } })\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'email address is required' } })\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'phone no is required' } })\r\n            return;\r\n        }\r\n        if (website === '') {\r\n            this.setState({ errors: { website: 'website is required' } })\r\n            return;\r\n        }\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone,\r\n            website\r\n        };\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(\r\n            `https://jsonplaceholder.typicode.com/users/${id}`,\r\n            updContact\r\n        );\r\n\r\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n        // clear text field\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            website: '',\r\n            errors: {}\r\n        });\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value })\r\n    render() {\r\n        const { name, email, phone, website, errors } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Edit Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup\r\n                                        labal=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter your Name\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        labal=\"Email Address\"\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        placeholder=\"Enter your Email Id\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        labal=\"Phone No\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter your Phone no\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        labal=\"website\"\r\n                                        name=\"website\"\r\n                                        placeholder=\"Enter your website\"\r\n                                        value={website}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.website}\r\n                                    />\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Update Contact\"\r\n                                        className=\"btn btn-dark btn-block\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\nexport default EditContact;","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-6\">About Contact manager</h1>\r\n            <p className=\"lead\">Simple app to manage contact</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h2 className=\"display-4\"> <span className=\"text-danger\">404 </span> Page not found</h2>\r\n            <p className=\"lead\">Sorry, that page does not exist </p>\r\n        </div>\r\n    )\r\n}\r\n ","import React, { Component } from 'react'\r\n\r\n class Test extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"display-4\">Test Component</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Test;","import React from 'react';\nimport Contacts from './component/Contacts/Contacts';\nimport Header from './component/Layout/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Provider } from './Context';\nimport AddContact from './component/Contacts/AddContact';\nimport EditContact from './component/Contacts/EditContact';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport About from './component/pages/About';\nimport NotFound from './component/pages/NotFound';\nimport Test from './component/test/Test';\n\n\n\nfunction App() {\n\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/Contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/Contact/add\" component={AddContact} />\n              <Route exact path=\"/About\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}